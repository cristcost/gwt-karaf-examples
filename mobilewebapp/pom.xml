<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>net.cristcost</groupId>
		<version>1.0.0-SNAPSHOT</version>
		<artifactId>gwt-karaf-main</artifactId>
	</parent>

	<artifactId>gwt-karaf-mobilewebapp</artifactId>
	<packaging>war</packaging>
	<name>GWT on Karaf Examples :: Mobile Web App Sample</name>

	<dependencies>

		<!-- GWT Dependencies -->
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-user</artifactId>
			<version>${gwt.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-dev</artifactId>
			<version>${gwt.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.google.web.bindery</groupId>
			<artifactId>requestfactory-server</artifactId>
			<version>${gwt.version}</version>
		</dependency>

		<!-- For the servlet filter -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
		</dependency>

		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>1.0.0.GA</version>
		</dependency>
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>1.0.0.GA</version>
			<classifier>sources</classifier>
		</dependency>

		<!-- Hibernate bean validation binary for the server -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>4.1.0.Final</version>
			<exclusions>
				<exclusion>
					<groupId>javax.xml.bind</groupId>
					<artifactId>jaxb-api</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.xml.bind</groupId>
					<artifactId>jaxb-impl</artifactId>
				</exclusion>
			</exclusions>
		</dependency>


		<dependency>
			<groupId>org.eclipse.persistence</groupId>
			<artifactId>javax.persistence</artifactId>
			<version>${jpa.eclipselink.version}</version>
		</dependency>

		<!-- GIN and Guice for IoC / DI -->
		<dependency>
			<groupId>com.google.inject</groupId>
			<artifactId>guice</artifactId>
			<version>2.0</version>
		</dependency>
		<dependency>
			<groupId>com.google.gwt.inject</groupId>
			<artifactId>gin</artifactId>
			<version>1.0</version>
		</dependency>

		<!-- Use the JSR 330 injection interfaces -->
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>1</version>
		</dependency>


		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
		</dependency>


		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.6.1</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-jdk14</artifactId>
			<version>1.6.1</version>
			<scope>test</scope>
		</dependency>

		<!-- Annotation processor goes into main dependency for latest version 
			of maven -->
		<dependency>
			<groupId>com.google.web.bindery</groupId>
			<artifactId>requestfactory-apt</artifactId>
			<version>${gwt.version}</version>
		</dependency>
	</dependencies>

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
			<resource>
				<directory>src/main/java</directory>
				<includes>
					<include>**/*.java</include>
					<include>**/*.gwt.xml</include>
				</includes>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<!-- No libs and META-INF in WEB-INF for deployment to OSGi -->
					<packagingExcludes>WEB-INF/lib/,
						WEB-INF/classes/META-INF/</packagingExcludes>
					<!-- Include Manifest Generated by Bundle Plugin in the following position -->
					<archive>
						<manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
					</archive>
					<webResources>
					</webResources>
				</configuration>
			</plugin>

			<!-- Add source folders to test classpath in order to run gwt-tests as 
				normal junit-tests -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>

				<configuration>
					<additionalClasspathElements>
						<additionalClasspathElement>${project.build.sourceDirectory}</additionalClasspathElement>
						<additionalClasspathElement>${project.build.testSourceDirectory}</additionalClasspathElement>
					</additionalClasspathElements>
					<useManifestOnlyJar>false</useManifestOnlyJar>
					<forkMode>always</forkMode>

					<!-- Folder for generated testing stuff -->
					<systemProperties>
						<property>
							<name>gwt.args</name>
							<value>-out ${project.build.directory}/${project.build.finalName}</value>
						</property>
					</systemProperties>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>gwt-maven-plugin</artifactId>
				<version>${gwt.plugin.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>compile</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<style>PRETTY</style>
					<!-- URL that should be automatically opened in the GWT shell (gwt:run). -->
					<runTarget>MobileWebApp.html</runTarget>
					<!-- Ask GWT to create the Story of Your Compile (SOYC) (gwt:compile) -->
					<compileReport>true</compileReport>
					<module>com.google.gwt.sample.mobilewebapp.MobileWebApp</module>
					<logLevel>INFO</logLevel>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>com.google.gwt</groupId>
						<artifactId>gwt-dev</artifactId>
						<version>${gwt.version}</version>
					</dependency>
					<dependency>
						<groupId>com.google.gwt</groupId>
						<artifactId>gwt-codeserver</artifactId>
						<version>${gwt.version}</version>
					</dependency>
					<dependency>
						<groupId>com.google.gwt</groupId>
						<artifactId>gwt-user</artifactId>
						<version>${gwt.version}</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<version>${bundle.plugin.version}</version>
				<executions>
					<execution>
						<id>bundle-manifest</id>
						<phase>process-classes</phase>
						<goals>
							<goal>manifest</goal>
						</goals>
					</execution>
				</executions>
				<extensions>true</extensions>
				<configuration>
					<supportedProjectTypes>
						<supportedProjectType>jar</supportedProjectType>
						<supportedProjectType>bundle</supportedProjectType>
						<supportedProjectType>war</supportedProjectType>
					</supportedProjectTypes>
					<instructions>
						<Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>
						<Bundle-Description>${project.description}</Bundle-Description>
						<Web-ContextPath>/${project.artifactId}</Web-ContextPath>
						<Bundle-ClassPath>.,WEB-INF/classes</Bundle-ClassPath>
						<!-- Don't export anything -->
						<Export-Package />
						<!-- Some client code is required on server, some don't -->
						<Import-Package>
							com.google.gwt.user.client.rpc.*,
							com.google.gwt.user.client.rpc.core.com.google.gwt.core.shared,
							com.google.gwt.user.client.rpc.core.java.lang,
							com.google.gwt.user.client.rpc.core.java.math,
							com.google.gwt.user.client.rpc.core.java.sql,
							com.google.gwt.user.client.rpc.core.java.util,
							com.google.gwt.user.client.rpc.core.java.util.logging,
							com.google.gwt.user.server.rpc.core.java.lang,
							com.google.gwt.user.server.rpc.core.java.util,
							com.google.web.bindery.requestfactory.server,
							com.google.web.bindery.requestfactory.vm.impl,
							!com.google.gwt.core.ext.*,
							!com.google.gwt.*.client.*,
							!com.google.web.bindery.*.client.*,
							!com.google.web.bindery.*.impl.*,
							*
						</Import-Package>
					</instructions>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>